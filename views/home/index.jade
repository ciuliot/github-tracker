extend ../layouts/page_layout

block head
	title GitHub tracker
	script(type='text/javascript').
		var MainModule = "viewmodels/home_view_model";
	script(data-main='/js/config', src='/js/libs/require.js')

	<!-- Templates -->

	script#new-branch-template(type="text/html")
		p Test 

	script#user-template(type="text/html")
		li(data-bind="css: { active: $root.selectedUser() === $data }")
			a(href="#", role="menuitem", data-bind="text: $data, click: $root.selectUser.bind($root, $data)") 

	script#user-repositories-template(type="text/html")
		li(data-bind="css: { active: $root.selectedRepository() === $data.name() }")
			a(href="#" data-bind="text: name, click: $root.selectRepository.bind($root, $data.name())") 

	script#milestone-template(type="text/html")
		li(data-bind="css: { active: $root.selectedMilestone() === $data.id() }")
			a(href="#")
				<!-- span.badge.pull-right(data-bind="text: (id === '*' || id === 'none') ? '' : open_issues") -->
				span(data-bind="text: title, click: $root.selectMilestone.bind($root, $data.id())") 

	script#issue-phase-header-template(type="text/html")
		th.swimlane(data-bind="text: name, attr: { width: $root.issuesColumnWidth }")

	script#issue-category-header-template(type="text/html")
		li: a(data-bind="text: name, attr: { href: id() }")

	script#issue-phase-template(type="text/html")
		td.swimlane(data-bind="foreach: filteredIssues, attr: { width: $root.issuesColumnWidth }")
			.panel.panel-default.issue
				.panel-heading(data-bind="style: { background: 'linear-gradient(45deg, transparent, ' + $parents[1].color() + ' 0px, ' + $parents[1].color() + ' 50%, transparent 50%)' }")
					b(data-bind="text: ('#' + number() + ' '), tooltip: { title: $parents[1].name() }")
					a(data-bind="click: $root.issueOpen.bind($root, $data)", data-toggle="modal", data-target="#issue-modal")
						b(data-bind="text: title")
					span.badge.pull-right(data-bind="text: estimate")

				.panel-body(data-bind="css: { hide: description().length === 0 && $parent.id() === '#closed' }")
					span(data-bind="text: description")
					.btn-group.btn-group-sm.pull-right
						.btn-group.btn-group-sm
							button.btn.btn-default.dropdown-toggle(type="button", data-bind=" css: { hide: !canAssign() } , tooltip: { title: assigneeTooltip, container: 'body' }", data-toggle="dropdown")
								img.img-rounded.issue-assignee-avatar(data-bind="attr: { src: assignee().avatar_url() || '/images/question_mark.svg' }")
								span.caret
							ul.dropdown-menu(role="menu", data-bind="foreach: collaborators", aria-labelledby="assignee-menu")
								li(data-bind="css: { active: login() === $parent.assignee().login() }")
									a(href="#", data-bind="click: $root.assignIssue.bind($root, $parent, $data)") 
										img.img-rounded.issue-assignee-avatar(data-bind="attr: { src: avatar_url() || '/images/question_mark.svg' }")
										span(data-bind="text: login() || 'Unassigned' ")
						.btn-group.btn-group-sm
							button.btn.btn-default.dropdown-toggle(type="button", data-bind="css: { hide: !haveBranch() }, tooltip: { title: 'Branch information', container: 'body' }", data-toggle="dropdown")
								span.glyphicon.glyphicon-random.issue-assignee-avatar
								span.caret
							ul.dropdown-menu(role="menu", aria-labelledby="branch-menu")
								li.dropdown-header.checkout-command
									form: input(type="text", readonly="readonly", onclick="this.select()", data-bind="attr: { value: checkoutCommand() }")
								li(role="presentation"): a(role="menuitem", data-bind="attr: { href: 'https://github.com/ciuliot/github-tracker/tree/' + branch().name() }", target="_blank") Open branch on GitHub
								
								
						button.btn.btn-default(type="button", data-bind="css: { hide: !canStart() }, click: $root.issueStart.bind($root, $data), tooltip: { title: 'Start work', container: 'body' }")
							span.glyphicon.glyphicon-play
						button.btn.btn-default(type="button", data-bind="css: { hide: !canComplete() }, click: $root.issueComplete.bind($root, $data), tooltip: { title: 'Complete work', container: 'body' }")
							span.glyphicon.glyphicon-ok
						button.btn.btn-default(type="button", data-toggle="modal" data-target="#impediment-modal"
							data-bind="css: { hide: !canPause() }, click: $root.issuePauseOpen.bind($root, $data), tooltip: { title: 'Put work on hold', container: 'body' }")
							span.glyphicon.glyphicon-pause
						button.btn.btn-default(type="button", data-bind="css: { hide: !canStop() }, click: $root.issueStop.bind($root, $data), tooltip: { title: 'Stop work', container: 'body' }")
							span.glyphicon.glyphicon-stop
						button.btn.btn-default(type="button", data-bind="css: { hide: !canAccept() }, click: $root.issueAccept.bind($root, $data), tooltip: { title: 'Accept implementation', container: 'body' }")
							span.glyphicon.glyphicon-thumbs-up
						button.btn.btn-default(type="button", data-bind="css: { hide: !canReject() }, click: $root.issueReject.bind($root, $data), tooltip: { title: 'Reject implementation', container: 'body' }")
							span.glyphicon.glyphicon-thumbs-down		

block body
	#impediment-modal.modal.fade(data-bind="with: impediment")
		.modal-dialog
			.modal-content
				.modal-header
					button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
					h4.modal-title(data-bind="text: ('Impediment for issue #' + issue_id()) ")
				.modal-body
					form(role="form")
						.form-group
							p.help-block Please describe why work on this issue is blocked:
							textarea.form-control(rows="3", data-bind="value: description, valueUpdate: 'afterkeydown'")

				.modal-footer
					button.btn.btn-default(type="button", data-dismiss="modal") Close
					button.btn.btn-primary(type="button", data-dismiss="modal", data-bind="click: $root.issuePause.bind($root, $data)") Save changes

	#issue-modal.modal.fade(data-bind="with: issueDetail")
		.modal-dialog
			.modal-content
				.modal-header
					button.close(type="button", data-dismiss="modal", aria-hidden="true") &times;
					h4.modal-title(data-bind="text: ('Issue #' + number()) ")
				.modal-body
					form(role="form")
						include ../partials/feature
						label(for="description") Description:
						textarea.form-control(rows="3", data-bind="value: description")

				.modal-footer
					button.btn.btn-default(type="button", data-dismiss="modal") Close
					button.btn.btn-primary(type="button", data-dismiss="modal", data-bind="click: $root.issuePause.bind($root, $data)") Save changes

	nav.navbar.navbar-default(role="navigation")
		.navbar-header
			button.navbar-toggle(type="button", data-toggle="collapse" data-target="#home-navbar-collapse")
				span.sr-only Toggle navigation
				span.icon-bar
				span.icon-bar
				span.icon-bar
			a.navbar-brand Tracker
		.collapse.navbar-collapse#home-navbar-collapse
			ul.nav.navbar-nav				
				li.dropdown
					a.dropdown-toggle(href="#", data-toggle="dropdown")
						span(data-bind="text: selectedUser() === null ? 'Users' : selectedUser()")
						b.caret
					ul.dropdown-menu(data-bind="template: { name: 'user-template', foreach: users }")
				li.dropdown
					a.dropdown-toggle(href="#", data-toggle="dropdown")
						span(data-bind="text: selectedRepository() === null ? 'Repositories' : selectedRepository()")
						b.caret
					ul.dropdown-menu(data-bind="template: { name: 'user-repositories-template', foreach: userRepositories }")
						
				li.dropdown
					a.dropdown-toggle(href="#", data-toggle="dropdown")
						span(data-bind="text: selectedMilestoneTitle()")
						b.caret
					ul.dropdown-menu
						li.disabled: a(href="javascript:void(0)") Add new milestone
						li.divider
						<!-- ko template { name: 'milestone-template', foreach: milestones } -->			
						<!-- /ko -->
			ul.nav.navbar-nav.navbar-right
				li: p.saving-indicator.navbar-text(data-bind="css: { invisible: savingCount() == 0 }")
				li: p.loading-indicator.navbar-text(data-bind="css: { invisible: loadingCount() == 0 }")
				li
					form.navbar-form(role="form")
						.form-group
							input.form-control(type="text", placeholder="Search", data-bind="value: $root.issuesViewModel.filter, valueUpdate: 'afterkeydown'")
				li
					.btn-group
						button.btn.btn-default.navbar-btn(data-toggle="modal" data-target="#issue-modal"
							data-bind="css: { disabled: selectedRepository() === null }, tooltip: { title: 'Add new issue to product backlog', container: 'body', placement: 'bottom' }")
							span.glyphicon.glyphicon-plus
						button.btn.btn-default.navbar-btn(data-bind="css: { disabled: loadingCount() > 0 }, click: $root.reloadIssues.bind($root, true), tooltip: { title: 'Refresh issues', container: 'body', placement: 'bottom' }")
							span.glyphicon.glyphicon-refresh
					
				li.dropdown
					a.dropdown-toggle(href="#", data-toggle="dropdown")
						div
						span(data-bind="text: user().name()") 
						b.caret
					ul.dropdown-menu
						li: a(href="#", data-bind="click: $root.reloadRepositories.bind($root)") Refresh repositories
						li.divider
						li: a(href="/logout") Logout

	table.table.phases
		thead
			tr(data-bind="template: { name: 'issue-phase-header-template', foreach: labelsViewModel.labels().phases }")


	.issues(data-spy="scroll", data-target="#issues-navbar")
		table.table
			tbody
				<!-- ko foreach: issuesViewModel.categories() -->
				tr(data-bind="template: { name: 'issue-phase-template', foreach: phases }")
				<!-- /ko -->
				
		




